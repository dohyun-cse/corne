/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // |  ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  =   |
            // | ESC  | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |  -  |  \   |
            // | SHFT |     |     |     |     |     |   | HME | PGD | PGU | END |     | CTRL |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Sym";
            bindings = <
&kp GRAVE  &kp N1                &kp N2                 &kp N3            &kp N4             &kp N5       &kp N6     &kp N7          &kp N8     &kp N9     &kp N0         &kp BACKSPACE
&kp ESC    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none        &kp EQUAL  &kp MINUS       &kp ASTRK  &kp CARET  &kp BACKSLASH  &trans
&kp LSHFT  &kp LEFT_BRACE        &kp RIGHT_BRACE        &none             &none              &none        &kp PLUS   &kp UNDERSCORE  &trans     &trans     &kp SLASH      &kp RCTRL
                                                        &kp LGUI          &trans             &kp SPACE    &kp RET    &mo 3           &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  `  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |      |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | CTRL |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Navi";
            bindings = <
&kp TAB    &kp EXCL                &kp AT                  &kp HASH              &kp DLLR           &kp PRCNT                &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&kp ESC    &kp LA(NUMBER_1)        &kp LA(NUMBER_2)        &kp LA(NUMBER_3)      &kp LA(NUMBER_4)   &kp LA(NUMBER_5)         &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT             &trans                 &trans
&kp LSHFT  &kp LA(LC(LEFT_ARROW))  &kp LA(LC(DOWN_ARROW))  &kp LA(LC(UP_ARROW))  &kp LA(LC(RIGHT))  &kp LC(LG(LS(SPACE)))    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END               &trans                 &kp RCTRL
                                                           &kp LGUI              &mo 3              &kp SPACE                &kp RET         &trans         &kp RALT
            >;
        };

        FUNCTION_LAYER {
            display-name = "Funct";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6      &kp F7             &kp F8           &kp F9        &kp F10       &trans
&trans  &none         &kp F10       &kp F11       &kp F5        &kp F12         &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRI_DN  &kp C_BRI_UP  &kp K_POWER
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREV  &kp C_PP           &kp C_NEXT       &trans        &trans        &trans
                                    &kp LGUI      &trans        &trans          &bt BT_CLR  &trans             &trans
            >;
        };
    };
};
