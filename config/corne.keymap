/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        lht: lht {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAB_LAYER";
            bindings = <&mo>, <&lt>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        khp: khp {
            compatible = "zmk,behavior-hold-tap";
            label = "KHP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        off {
            bindings = <&soft_off>;
            key-positions = <0 24 35 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // |  ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB            &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&khp LCTRL ESCAPE  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT          &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                                 &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  =   |
            // | ESC  | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |  -  |  \   |
            // | SHFT |     |     |     |     |     |   | HME | PGD | PGU | END |     | CTRL |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Sym";
            bindings = <
&kp GRAVE          &kp N1                &kp N2                 &kp N3            &kp N4             &kp N5           &kp N6     &kp N7          &kp N8     &kp N9     &kp N0         &kp BACKSPACE
&khp LCTRL ESCAPE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp AMPERSAND    &kp EQUAL  &kp MINUS       &kp ASTRK  &kp CARET  &kp BACKSLASH  &trans
&kp LSHFT          &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans            &none              &none            &kp PLUS   &kp UNDERSCORE  &trans     &trans     &kp SLASH      &kp RCTRL
                                                                &kp LGUI          &trans             &kp SPACE        &kp RET    &mo 3           &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  `  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |      |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | CTRL |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Navi";
            bindings = <
&kp TAB            &kp F1                  &kp F2                  &kp F3                &kp F4             &kp F5                   &kp F6          &kp F7         &kp F8        &kp F9     &kp F10  &kp BSPC
&khp LCTRL ESCAPE  &kp LA(NUMBER_1)        &kp LA(NUMBER_2)        &kp LA(NUMBER_3)      &kp LA(NUMBER_4)   &kp LA(N5)               &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans   &trans
&kp LSHFT          &kp LA(LC(LEFT_ARROW))  &kp LA(LC(DOWN_ARROW))  &kp LA(LC(UP_ARROW))  &kp LA(LC(RIGHT))  &kp LC(LG(LS(SPACE)))    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans   &kp RCTRL
                                                                   &kp LGUI              &mo 3              &kp SPACE                &kp RET         &trans         &kp RALT
            >;
        };

        FUNCTION_LAYER {
            display-name = "Funct";
            bindings = <
&kp TAB            &kp F1  &kp F2   &kp F3    &kp F4   &kp C_VOLUME_UP      &kp C_BRIGHTNESS_INC  &trans        &trans            &trans        &trans      &trans
&khp LCTRL ESCAPE  &kp F5  &kp F6   &kp F7    &kp F8   &kp C_VOLUME_DOWN    &kp C_BRIGHTNESS_DEC  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &trans      &trans
&kp LEFT_SHIFT     &kp F9  &kp F10  &kp F11   &kp F12  &kp K_MUTE           &bt BT_SEL 0          &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_CLR  &to 4
                                    &kp LGUI  &trans   &kp SPACE            &kp RET               &trans        &kp LEFT_ALT
            >;
        };

        PRESENTATION_LAYER {
            bindings = <
&trans  &trans  &trans  &trans   &trans         &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans         &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp F5   &kp LG(LS(F))  &kp RC(LG(P))    &trans  &trans  &trans  &trans  &trans  &to 0
                        &kp ESC  &kp LEFT       &kp RIGHT        &trans  &trans  &trans
            >;
        };
    };
};
